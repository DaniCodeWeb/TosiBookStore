---
---

<div id="registro-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden">
  <!-- Overlay de fondo oscuro -->
  <div class="absolute inset-0 bg-black bg-opacity-80" id="registro-modal-overlay"></div>

  <!-- Modal -->
  <div class="relative bg-white rounded-lg shadow-xl overflow-hidden w-full max-w-4xl mx-4 flex flex-col md:flex-row opacity-90 transform scale-95 opacity-0 transition-all duration-300">
    <!-- Botón de cerrar -->
    <button id="close-registro-modal" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 z-10">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>

    <!-- Lado izquierdo - Formulario -->
    <div class="w-full md:w-1/2 p-8 bg-gray-200">
      <div class="flex justify-center mb-6">
        <img src="/src/assets/img/Tosilogo1.png" alt="TOSI" class="h-12" >
      </div>

      <div class="text-center mb-6">
        <p class="text-gray-800 text-lg">
          ¡Únete a nuestra comunidad y disfruta de ofertas exclusivas para miembros!
        </p>
      </div>

      <form class="space-y-4">
        <p class="text-center text-gray-700 mb-2">Completa tus datos para crear una cuenta</p>

        <div class="grid grid-cols-2 gap-4">
          <div>
            <input
              type="text"
              id="nombre"
              placeholder="Nombre"
              class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              required
            >
          </div>
          <div>
            <input
              type="text"
              id="apellido"
              placeholder="Apellido"
              class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              required
            >
          </div>
        </div>

        <div>
          <input
            type="email"
            id="registro-email"
            placeholder="Correo electrónico"
            autocomplete="email"
            class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          >
        </div>

        <div>
          <input
            type="password"
            id="registro-password"
            placeholder="Contraseña"
            class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          >
        </div>

        <div>
          <input
            type="password"
            id="confirmar-password"
            placeholder="Confirmar contraseña"
            class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          >
        </div>

        <div class="flex items-center">
          <input
            type="checkbox"
            id="terminos"
            class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            required
          >
          <label for="terminos" class="ml-2 block text-sm text-gray-600">
            Acepto los <a href="/terminos" class="text-blue-600 hover:underline">términos y condiciones</a>
          </label>
        </div>

        <button
          type="submit"
          class="w-full py-3 bg-yellow-400 hover:bg-yellow-500 text-gray-800 font-medium rounded-md transition-colors"
        >
          Crear Cuenta
        </button>

        <div class="relative flex items-center justify-center">
          <div class="border-t border-gray-300 w-full"></div>
          <span class="bg-gray-200 px-3 text-sm text-gray-500">o</span>
          <div class="border-t border-gray-300 w-full"></div>
        </div>

        <button
          type="button"
          class="w-full py-3 bg-white border border-gray-300 hover:bg-gray-50 text-gray-800 font-medium rounded-md transition-colors flex items-center justify-center"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 24 24">
            <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
            <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
            <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
            <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
          </svg>
          Registrate con Google
        </button>

        <div class="text-center text-sm text-gray-600">
          ¿Ya tienes una cuenta? <a href="#" id="ir-a-login" class="text-blue-600 hover:underline">Inicia sesión aquí</a>
        </div>
      </form>
    </div>

    <!-- Lado derecho - Imagen -->
    <div class="hidden md:block md:w-1/2 bg-black/90 p-8 text-white">
      <h2 class="text-2xl font-bold text-yellow-400 mb-8 text-center">ÚNETE A TOSIBOOKSTORE</h2>

      <div class="flex justify-center items-center h-full">
        <img
          src="/src/assets/img/login/pajarosfondo.png"
          alt="Ilustración de libro"
          class="max-w-full max-h-80 object-contain"
        >
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const registroButton = document.getElementById('registro-button');
    const registroModal = document.getElementById('registro-modal');
    const closeRegistroModal = document.getElementById('close-registro-modal');
    const registroModalOverlay = document.getElementById('registro-modal-overlay');
    const irALoginBtn = document.getElementById('ir-a-login');
    const loginModal = document.getElementById('login-modal');

    // Función para abrir el modal con animación
    const abrirRegistroModal = () => {
      if (registroModal) {
        registroModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';

        // Aplicar animación de entrada
        setTimeout(() => {
          const modalContent = registroModal.querySelector('.transform');
          if (modalContent) {
            modalContent.classList.remove('scale-95', 'opacity-0');
            modalContent.classList.add('scale-100', 'opacity-100');
          }
        }, 10);
      }
    };

    // Función para cerrar el modal con animación
    const cerrarRegistroModal = () => {
      if (registroModal) {
        const modalContent = registroModal.querySelector('.transform');
        if (modalContent) {
          modalContent.classList.remove('scale-100', 'opacity-100');
          modalContent.classList.add('scale-95', 'opacity-0');

          // Esperar a que termine la animación antes de ocultar
          setTimeout(() => {
            registroModal.classList.add('hidden');
            document.body.style.overflow = '';
          }, 300);
        } else {
          registroModal.classList.add('hidden');
          document.body.style.overflow = '';
        }
      }
    };

    // Abrir modal al hacer clic en el botón de registro
    if (registroButton) {
      registroButton.addEventListener('click', (e) => {
        e.preventDefault();
        abrirRegistroModal();
      });
    }

    // Cerrar modal al hacer clic en el botón de cerrar
    if (closeRegistroModal) {
      closeRegistroModal.addEventListener('click', cerrarRegistroModal);
    }

    // Cerrar modal al hacer clic en el overlay
    if (registroModalOverlay) {
      registroModalOverlay.addEventListener('click', (e) => {
        if (e.target === registroModalOverlay) {
          cerrarRegistroModal();
        }
      });
    }

    // Cerrar modal al presionar ESC
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && registroModal && !registroModal.classList.contains('hidden')) {
        cerrarRegistroModal();
      }
    });

    // Switch de registro a login
    if (irALoginBtn) {
      irALoginBtn.addEventListener('click', (e) => {
        e.preventDefault();
        cerrarRegistroModal();

        // Esperar a que termine la animación de cierre antes de abrir el login
        setTimeout(() => {
          if (loginModal) {
            // Disparar evento personalizado para abrir el modal de login
            const abrirLoginEvent = new Event('abrir-login-modal');
            document.dispatchEvent(abrirLoginEvent);
          }
        }, 300);
      });
    }

    // Escuchar evento para abrir este modal desde otros componentes
    document.addEventListener('abrir-registro-modal', abrirRegistroModal);
  });
</script>
